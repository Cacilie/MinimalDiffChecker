{"version":3,"sources":["logo.svg","Containers/HomeContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","centerStyle","display","justifyContent","textAreaStyle","width","aceEditorStyle","border","flex","label","fontSize","fontWeight","HomeContainer","classes","useState","logMessage","setlogMessage","snapOne","setsnapOne","snapTwo","setsnapTwo","notes","setnotes","className","Grid","container","item","xs","Paper","onChange","v","annotations","TextField","id","multiline","rows","variant","disabled","value","ButtonGroup","aria-label","Button","onClick","linesSnapOne","split","linesSnapTwo","length","diff","i","push","tempNotes","j","row","column","type","_","window","location","reload","App","path","About","Users","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2d53998.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { ButtonGroup, Button, TextField } from '@material-ui/core';\nimport AceEditor from 'react-ace';\nimport { diff as DiffEditor } from \"react-ace\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    centerStyle: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    textAreaStyle: {\n        width: '90%',\n        padding: 15,\n    },\n    aceEditorStyle: {\n        display: 'flex',\n        justifyContent: 'center',\n        border: '1px solid lightgray',\n        padding: 15,\n        flex: 1\n    },\n    label: {\n        fontSize: 11,\n        fontWeight: 'bold',\n        textAlign: 'center'\n    }\n}));\n\n\n\nexport default function HomeContainer() {\n    \n    const classes = useStyles();\n    \n\n    const [logMessage, setlogMessage] = useState(\"...\");\n    const [snapOne, setsnapOne] = useState(\"\");\n    const [snapTwo, setsnapTwo] = useState(\"\");\n    const [notes, setnotes] = useState([])\n\n    const compare = () => {\n        if(snapOne == snapTwo){\n            setlogMessage(\"Execution says: They are the same\")\n        }else{\n            const linesSnapOne = snapOne.split(\"\\n\");\n            const linesSnapTwo = snapTwo.split(\"\\n\");\n\n           \n\n            if(linesSnapOne.length > linesSnapTwo.length){\n                let diff = linesSnapOne.length - linesSnapTwo.length;\n\n                for(let i = 0; i<= diff-1; i++){\n                    linesSnapTwo.push(\"\")\n                }\n            }else if(linesSnapTwo.length > linesSnapOne.length){\n                let diff = linesSnapTwo.length - linesSnapOne.length;\n\n                for(let i = 0; i<= diff -1; i++){\n                    linesSnapOne.push(\"\")\n                }\n            }\n            let tempNotes = []\n\n            for(let j = 0; j <= linesSnapOne.length; j++){\n\n                if(linesSnapOne[j] != linesSnapTwo[j]){\n                    tempNotes.push({\n                        row: j, column: 0, type: 'error', text: 'Something is different here.'\n                    })\n                }\n            }\n\n            setnotes(tempNotes)\n\n            setlogMessage(\"Execution says: Something is different! Check on the editors\")\n        }\n    }\n\n    return ( \n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={6} >\n                    <p className={classes.label} >Text 1</p>\n                    <Paper className={classes.aceEditorStyle}>\n                        <AceEditor onChange={v => setsnapOne(v)} \n                        annotations={notes}\n                        />\n                    </Paper>\n                </Grid>\n                <Grid item xs={6}>\n                    <p className={classes.label}>Text 2</p>\n\n                    <Paper className={classes.aceEditorStyle}>\n                        <AceEditor onChange={v => setsnapTwo(v)} \n                        annotations={notes}\n                        />\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} className={classes.centerStyle}>\n                    <TextField\n                        className={classes.textAreaStyle}\n                        id=\"outlined-multiline-static\"\n                        label=\"Log\"\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                        disabled\n                        value={logMessage}\n                    />\n                </Grid>\n                <Grid item xs={12} className={classes.centerStyle}> \n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n                        <Button onClick={compare} >COMPARE</Button>\n                        <Button onClick={_ => window.location.reload()} > RESTART</Button>\n                    </ButtonGroup> \n                </Grid>\n           \n            </Grid>\n\n        </div>\n    )\n    \n}","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport  HomeContainer  from \"./Containers/HomeContainer\"\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/users\">\n                      <Users />\n          </Route>\n          <Route path=\"/\">\n            <HomeContainer />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n\n  )\n}\n\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}